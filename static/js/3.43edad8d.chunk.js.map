{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","style","dialog","active","src","img","alt","to","name","Message","message","maxLength50","maxLengthConstructor","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","Dialogs","state","dialogsPage","dialogsElements","dialogsData","map","d","key","messagesElements","messagesData","m","isAuth","dialogs","dialog__items","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageActionCreator","updateNewMessageText","text","updateNewMessageTextActionCreator","withAuthRedirect"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,OAAS,wBAAwB,OAAS,wBAAwB,IAAM,qBAAqB,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,0BAA0B,cAAgB,iC,+FCavTC,EAVI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKC,UAAWC,IAAMC,OAAS,IAAMD,IAAME,QACvC,yBAAKC,IAAKP,EAAMQ,IAAKC,IAAI,aAAaN,UAAWC,IAAMI,MACvD,kBAAC,IAAD,CAASE,GAAIT,GAAOD,EAAMW,QCEvBC,EARC,SAACZ,GACb,OACI,yBAAKG,UAAWC,IAAMS,QAASX,GAAIF,EAAME,IACpCF,EAAMa,U,wCC8BbC,EAAcC,YAAqB,IAWnCC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EATL,SAACjB,GACpB,OACI,0BAAMmB,SAAUnB,EAAMoB,cAClB,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUZ,KAAK,iBAAiBa,SAAU,CAACC,IAAUX,KACvE,4CAOGY,EAxCC,SAAC1B,GACb,IAAI2B,EAAQ3B,EAAM4B,YAEdC,EAAkBF,EAAMG,YAAYC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAMsB,IAAKD,EAAE9B,GAAIA,GAAI8B,EAAE9B,GAAIM,IAAKwB,EAAExB,SACnG0B,EAAmBP,EAAMQ,aAAaJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASvB,QAASuB,EAAEvB,QAASoB,IAAKG,EAAElC,GAAIA,GAAIkC,EAAElC,QAEjG,IAAKF,EAAMqC,OACP,OAAO,kBAAC,IAAD,CAAU3B,GAAI,WAOzB,OACI,yBAAKP,UAAWC,IAAMkC,SAClB,yBAAKnC,UAAWC,IAAMmC,eACjBV,GAEL,yBAAK1B,UAAWC,IAAMS,SACjBqB,EACD,kBAAClB,EAAD,CAAqBG,SAXhB,SAACqB,GACdxC,EAAMyC,YAAYD,EAAOE,sB,wBCIlBC,sBACXC,aAlBkB,SAACjB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACiB,GACtB,MAAO,CACHJ,YAAa,SAACC,GACVG,EAASC,YAAyBJ,KAEtCK,qBAAsB,SAACC,GACnBH,EAASI,YAAkCD,SAOnDE,IAFWP,CAGbjB","file":"static/js/3.43edad8d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__Wk3OV\",\"dialog__items\":\"Dialogs_dialog__items__3G8Lg\",\"active\":\"Dialogs_active__3m6x5\",\"dialog\":\"Dialogs_dialog__lhEc_\",\"img\":\"Dialogs_img__r2WD5\",\"message\":\"Dialogs_message__1KsJm\",\"messageInput\":\"Dialogs_messageInput__3z2vC\",\"textarea\":\"Dialogs_textarea__32RFc\",\"messageButton\":\"Dialogs_messageButton__3rgqI\"};","import React from \"react\";\r\nimport style from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/Dialogs/' + props.id;\r\n    return (\r\n        <div className={style.dialog + ' ' + style.active}>\r\n            <img src={props.img} alt=\"profileImg\" className={style.img}/>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport style from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={style.message} id={props.id}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport style from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthConstructor, required} from \"../../Utils/Validators/validators\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogsData.map(d => <DialogItem name={d.name} key={d.id} id={d.id} img={d.img}/>);\r\n    let messagesElements = state.messagesData.map(m => <Message message={m.message} key={m.id} id={m.id}/>);\r\n\r\n    if (!props.isAuth) {\r\n        return <Redirect to={'/Login'}/>\r\n    }\r\n\r\n    const onSubmit = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialog__items}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={style.message}>\r\n                {messagesElements}\r\n                <AddMessageFormRedux onSubmit={onSubmit}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength50 = maxLengthConstructor(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name=\"newMessageBody\" validate={[required, maxLength50]}/>\r\n            <button>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {sendMessageActionCreator, updateNewMessageTextActionCreator} from \"../../Redux/Dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageActionCreator(newMessageBody));\r\n        },\r\n        updateNewMessageText: (text) => {\r\n            dispatch(updateNewMessageTextActionCreator(text));\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}